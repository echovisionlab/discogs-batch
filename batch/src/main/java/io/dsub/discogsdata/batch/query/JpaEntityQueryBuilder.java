package io.dsub.discogsdata.batch.query;

import java.lang.reflect.Field;
import java.util.List;
import java.util.Map;
import java.util.stream.Stream;

public interface JpaEntityQueryBuilder<T> extends QueryBuilder<T> {
  boolean isCreatedAt(Field field);

  boolean isLastModifiedAt(Field field);

  boolean isDateTimeField(Field field);

  boolean isIdentifier(Field field);

  boolean isTransient(Field field);

  boolean isColumn(Field field);

  boolean isJoinColumn(Field field);

  boolean isAutoGenerated(Field field);

  boolean isAutoGeneratedId(Field field);

  boolean isMappedField(Field field);

  Stream<Field> getFieldStream(Class<?> targetClass);

  Stream<Field> getFieldStream(Class<?> targetClass, boolean withId);

  String getTableName(Class<?> targetClass);

  boolean isEntityIdNotManaged(Class<?> targetClass);

  String getValueMappedString(Class<?> targetClass, boolean withId);

  List<String> getColumns(Class<?> targetClass, boolean withId);

  List<String> getUniqueKeys(Class<?> targetClass);

  List<String> getIdColumnNames(Class<?> targetClass);

  List<String> getUniqueConstraintsColumns(Class<?> targetClass);

  List<String> getUniqueConstraintsColumnsAndFields(Class<?> targetClass);

  List<String> getUniqueConstraintsAnnotationNames(Class<?> targetClass);

  boolean hasUniqueConstraintAnnotation(Class<?> targetClass);

  String getColumnName(Field field);

  Map<String, String> getIdColumnAndFields(Class<?> targetClass);

  String getUpdateSetColumnsAndValues(Class<?> targetClass);
}
