buildscript {
    ext {
        springBootVersion = '2.5.0'
    }
    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "io.spring.gradle:dependency-management-plugin:1.0.11.RELEASE"
    }
}

allprojects {
    group 'io.dsub.discogs'
    version '0.1-SNAPSHOT'
    apply plugin: 'jacoco'
    repositories {
        mavenLocal()
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    sourceCompatibility = 11
    targetCompatibility = 11

    dependencies {
        implementation(
                'org.springframework.boot:spring-boot-starter-data-jpa',
                'org.springframework.boot:spring-boot-starter-web',
                'org.springframework.boot:spring-boot-starter-aop',
                'net.ttddyy:datasource-proxy:1.7',
                'org.projectlombok:lombok',
                'org.reflections:reflections:0.9.12',
                'org.apache.commons:commons-lang3'
        )
        testImplementation(
                'org.springframework.boot:spring-boot-starter-test',
                'org.junit.jupiter:junit-jupiter:5.7.2',
                'org.projectlombok:lombok'
        )
        testAnnotationProcessor 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
    }

    test {
        useJUnitPlatform()
    }

    clean {
        delete "${rootDir}/build"
    }
}

task codeCoverageReport(type: JacocoReport) {
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

    subprojects.each {
        sourceSets it.sourceSets.main
    }

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: ['io/dsub/discogs/common',
                                        'io/dsub/discogs/api',
                                        'io/dsub/discogs/batch/domain'])
        }))
    }

    reports {
        xml.enabled true
        xml.destination file("${buildDir}/reports/jacoco/report.xml")
        html.enabled true
        csv.enabled false
    }
}

codeCoverageReport.dependsOn {
    subprojects*.test
}