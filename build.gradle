plugins {
    id 'org.springframework.boot' version '2.7.4'
    id 'io.spring.dependency-management' version '1.0.14.RELEASE'
    id 'java'
    id 'maven-publish'
    id 'jacoco'
}

group project.maven_group
version project.artifact_version
sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

def props = new Properties()
if (file(".env").exists()) {
    file(".env").withInputStream { props.load(it) }
}

repositories {
    maven { url 'https://repo.spring.io/release' }
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom "org.testcontainers:testcontainers-bom:1.15.3"
    }
}

dependencies {
    implementation(
            'com.fasterxml.jackson.datatype:jackson-datatype-jsr310',
            'org.springframework.boot:spring-boot-starter-batch',
            'org.springframework.batch:spring-batch-integration',
            'org.springframework.boot:spring-boot-starter-data-r2dbc',
            "org.springframework:spring-oxm:5.3.23",
            'javax.xml.bind:jaxb-api:2.4.0-b180830.0359',
            "io.github.classgraph:classgraph:4.8.149",
            "me.tongfei:progressbar:0.9.4",
            "com.github.oshi:oshi-core:6.2.2",
            'org.postgresql:postgresql',
            'org.projectlombok:lombok',
    )
    testImplementation (
            'org.junit.jupiter:junit-jupiter:5.9.0',
            'org.springframework.boot:spring-boot-starter-test',
            'org.springframework.batch:spring-batch-test',
            'org.mockito:mockito-inline:4.8.0',
            'org.testcontainers:testcontainers',
            'org.testcontainers:postgresql',
            'org.testcontainers:junit-jupiter',
            'io.projectreactor:reactor-test'
    )
    annotationProcessor (
            'org.springframework.boot:spring-boot-configuration-processor',
            'org.projectlombok:lombok'
    )
    testAnnotationProcessor 'org.projectlombok:lombok'
}

//----------------------------------------------------
// JACOCO
//----------------------------------------------------

check.dependsOn jacocoTestReport

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}

jacocoTestReport {
    reports {
        xml.enabled(true)
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            element = 'CLASS'
            limit {
                counter = 'BRANCH'
                value = 'COVEREDRATIO'
                // minimum = 0.90
            }
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                // minimum = 0.80
            }
            limit {
                counter = 'LINE'
                value = 'TOTALCOUNT'
                // maximum = 200
            }
            excludes = [
                    // "com.example.somewhere.*"
            ]
        }
    }
}

//----------------------------------------------------
// PUBLISH
//----------------------------------------------------
publishing {
    // Declare all publications
    publications {
        mavenJava(MavenPublication) { from components.java }
    }

    // Add repositories to publish to
    repositories {
        // GitHub Packages (https://pkg.github.com)
        maven {
            name 'GitHub'
            url "https://maven.pkg.github.com/${project.github_repo}"
            credentials {
                username System.getenv('GITHUB_ACTOR')
                password System.getenv('GITHUB_TOKEN')
            }
        }
    }
}

//----------------------------------------------------
// NATIVE IMAGE
//----------------------------------------------------
bootBuildImage {
    builder = 'paketobuildpacks/builder:tiny'
    environment = ['BP_NATIVE_IMAGE': 'true']
}